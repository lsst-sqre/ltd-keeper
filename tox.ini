[tox]
envlist = py38,coverage-report,lint,typing
isolated_build = True

[docker:test-mysql]
image = mysql:5.7
ports =
    3307:3307/tcp
environment =
    MYSQL_DATABASE=keepertest
    MYSQL_USER=user
    MYSQL_PASSWORD=password
    MYSQL_ROOT_PASSWORD=password
    MYSQL_TCP_PORT=3307
healthcheck_cmd = mysqladmin -u $MYSQL_USER -p $MYSQL_PASSWORD status
healthcheck_timeout = 1
healthcheck_retries = 30
healthcheck_interval = 1
healthcheck_start_period = 1

[docker:test-postgres]
image = postgres:11
ports =
    3308:3308/tcp
# Environment variables are passed to the container. They are only
# available to that container, and not to the testenv, other
# containers, or as replacements in other parts of tox.ini
environment =
    POSTGRES_PASSWORD=password
    POSTGRES_USER=user
    POSTGRES_DB=keepertest
    PGPORT=3308
# The healthcheck ensures that tox-docker won't run tests until the
# container is up and the command finishes with exit code 0 (success)
healthcheck_cmd = PGPASSWORD=$POSTGRES_PASSWORD psql \
    --user=$POSTGRES_USER --dbname=$POSTGRES_DB \
    --host=127.0.0.1 --quiet --no-align --tuples-only \
    -1 --command="SELECT 1"
healthcheck_timeout = 1
healthcheck_retries = 30
healthcheck_interval = 1
healthcheck_start_period = 1

[testenv]
description = Run pytest against {envname}.
docker =
    test-postgres
passenv =
    LTD_KEEPER_TEST_AWS_ID
    LTD_KEEPER_TEST_AWS_SECRET
    LTD_KEEPER_TEST_BUCKET
setenv =
    LTD_KEEPER_TEST_DB_URL=postgresql+psycopg2://user:password@localhost:3308/keepertest
deps =
    -r{toxinidir}/requirements/main.txt
    -r{toxinidir}/requirements/dev.txt
commands =
    coverage run -m pytest {posargs}

[testenv:coverage-report]
description = Compile coverage from each test run.
skip_install = true
deps = coverage[toml]>=5.0.2
depends =
    py38
commands =
    coverage combine
    coverage report

[testenv:lint]
description = Lint codebase by running pre-commit (Black, isort, Flake8).
skip_install = true
deps =
    pre-commit
commands = pre-commit run --all-files

[testenv:typing]
description = Run mypy.
commands =
    mypy keeper tests setup.py

[testenv:docs]
description = Compile Sphinx docs.
allowlist_externals =
    make
commands = make -C docs html
